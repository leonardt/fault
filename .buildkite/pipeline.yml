steps:
  - command: |
      # tool setup
      source /cad/modules/tcl/init/bash
      module load base vcs xcelium/19.03.003 hspice spectre/18.10.314 verdi

      # create conda env
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
      chmod +x Miniconda3-latest-Linux-x86_64.sh
      ./Miniconda3-latest-Linux-x86_64.sh -b -u -p $$PWD/miniconda
      export PATH=$$PWD/miniconda/bin:$$PATH
      conda install python==3.8 -y -q

      # install python dependencies for testing
      pip install "pytest<6"
      pip install coverage pytest-pycodestyle
      pip install --upgrade "mantle>=2.0.0"
      pip install vcdvcd decorator kratos
      pip install DeCiDa scipy numpy

      # install fault
      pip install -e .

      # install kratos runtime
      pip install kratos-runtime

      # use the latest cmake
      pip install cmake
      
      # run tests
      coverage run -m pytest --pycodestyle tests/ -v -r s

      # upload coverage results
      bash <(curl -s https://codecov.io/bash)
    label: "test"
    timeout_in_minutes: 60
    agents:
      fault2: "true"

#   - command: |
#       # set up environment
#       source /etc/environment
#       echo $$PATH
# 
#       # create conda env
#       wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
#       chmod +x Miniconda3-latest-Linux-x86_64.sh
#       ./Miniconda3-latest-Linux-x86_64.sh -b -u -p $$PWD/miniconda
#       export PATH=$$PWD/miniconda/bin:$$PATH
#       conda install python==3.8 -y -q
# 
#       # install python dependencies for testing
#       pip install wheel
#       pip install "pytest<6"
#       pip install pytest-cov pytest-pycodestyle
#       pip install vcdvcd decorator kratos
#       pip install --upgrade "mantle>=2.0.0"
#       pip install DeCiDa scipy numpy
# 
#       # use the latest cmake
#       pip install cmake
# 
#       # install fault
#       pip install -e .
#       
#       # run tests
#       pytest --pycodestyle --cov-report=xml --cov=fault tests/ -v -r s
# 
#       # upload coverage results
#       bash <(curl -s https://codecov.io/bash)
# 
#       # deactivate virtual environment
#       deactivate
#     label: "fpga_verif"
#     timeout_in_minutes: 60
#     agents:
#         fpga_verif: "true"

