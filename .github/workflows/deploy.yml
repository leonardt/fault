name: Deploy to PyPI

on:
  push:
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install verilator
      shell: bash
      run: |
          sudo apt install -y verilator libgmp-dev libmpfr-dev libmpc-dev
          verilator --version
    - name: Install Python packages
      shell: bash -l {0}
      run: |
          pip install importlib_resources
          pip install "pytest<6"
          pip install pytest-cov pytest-pycodestyle
          pip install mantle>=2.0.0  # for tests.common
          pip install vcdvcd decorator kratos
          pip install .

    - name: Pytest
      shell: bash -l {0}
      run: |
        pytest --pycodestyle --cov-report=xml --cov=fault tests/ -v -r s
    - name: Coverage
      shell: bash -l {0}
      run: |
        bash <(curl -s https://codecov.io/bash)
    - name: Install deploy packages
      shell: bash -l {0}
      run: |
          pip install twine
    - name: Upload to PyPI
      shell: bash -l {0}
      run: |
          source .travis/deploy.sh
      env:
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
